
函数应用：打印图形和数学计算
目标

    感受函数的嵌套调用
    感受程序设计的思路,复杂问题分解为简单问题

思考&实现1

    写一个函数打印一条横线
    打印自定义行数的横线

参考代码1


# 打印一条横线
def printOneLine():
    print("-"*30)

# 打印多条横线
def printNumLine(num):
    i=0

    # 因为printOneLine函数已经完成了打印横线的功能，
    # 只需要多次调用此函数即可
    while i<num:
        printOneLine()
        i+=1

printNumLine(3)

思考&实现2

    写一个函数求三个数的和
    写一个函数求三个数的平均值

参考代码2


# 求3个数的和
def sum3Number(a,b,c):
    return a+b+c # return 的后面可以是数值，也可是一个表达式

# 完成对3个数求平均值
def average3Number(a,b,c):

    # 因为sum3Number函数已经完成了3个数的就和，所以只需调用即可
    # 即把接收到的3个数，当做实参传递即可
    sumResult = sum3Number(a,b,c)
    aveResult = sumResult/3.0
    return aveResult

# 调用函数，完成对3个数求平均值
result = average3Number(11,2,55)
print("average is %d"%result)

    在函数外边定义的变量叫做全局变量
    全局变量能够在所有的函数中进行访问
    如果在函数中修改全局变量，那么就需要使用global进行声明，否则出错
    如果全局变量的名字和局部变量的名字相同，那么使用的是局部变量的，小技巧强龙不压地头蛇

    在函数中不使用global声明全局变量时不能修改全局变量的本质是不能修改全局变量的指向，即不能将全局变量指向新的数据。
    对于不可变类型的全局变量来说，因其指向的数据不能修改，所以不使用global时无法修改全局变量。
    对于可变类型的全局变量来说，因其指向的数据可以修改，所以不使用global时也可修改全局变量。

